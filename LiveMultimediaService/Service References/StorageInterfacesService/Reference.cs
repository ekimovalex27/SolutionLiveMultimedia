//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JetSAS.StorageInterfacesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageInfo", Namespace="http://schemas.datacontract.org/2004/07/StorageInterfacesData")]
    [System.SerializableAttribute()]
    public partial class LanguageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NativeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NativeName {
            get {
                return this.NativeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NativeNameField, value) != true)) {
                    this.NativeNameField = value;
                    this.RaisePropertyChanged("NativeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalizationElement", Namespace="http://schemas.datacontract.org/2004/07/StorageInterfacesData")]
    [System.SerializableAttribute()]
    public partial class LocalizationElement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElementValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementName {
            get {
                return this.ElementNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementNameField, value) != true)) {
                    this.ElementNameField = value;
                    this.RaisePropertyChanged("ElementName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElementValue {
            get {
                return this.ElementValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementValueField, value) != true)) {
                    this.ElementValueField = value;
                    this.RaisePropertyChanged("ElementValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StorageInterfacesService.IStorageInterfaces")]
    public interface IStorageInterfaces {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLanguages", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLanguagesResponse")]
        System.Tuple<JetSAS.StorageInterfacesService.LanguageInfo[], string> GetLanguages(string Language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLanguages", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLanguagesResponse")]
        System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LanguageInfo[], string>> GetLanguagesAsync(string Language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalization", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationResponse")]
        System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string> GetLocalization(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalization", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationResponse")]
        System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string>> GetLocalizationAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalizationByList", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationByListResponse")]
        System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string> GetLocalizationByList(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, JetSAS.StorageInterfacesService.LocalizationElement[] ListDefaultElements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalizationByList", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationByListResponse")]
        System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string>> GetLocalizationByListAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, JetSAS.StorageInterfacesService.LocalizationElement[] ListDefaultElements);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalizationElement", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationElementResponse")]
        System.Tuple<string, string> GetLocalizationElement(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, string ElementName, bool IsRefreshTranslate, string DefaultValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/GetLocalizationElement", ReplyAction="http://tempuri.org/IStorageInterfaces/GetLocalizationElementResponse")]
        System.Threading.Tasks.Task<System.Tuple<string, string>> GetLocalizationElementAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, string ElementName, bool IsRefreshTranslate, string DefaultValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/TranslateString", ReplyAction="http://tempuri.org/IStorageInterfaces/TranslateStringResponse")]
        System.Tuple<string, string> TranslateString(string AccountKey, string TranslateFromLanguage, string TranslateToLanguage, string StringForTranslate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/TranslateString", ReplyAction="http://tempuri.org/IStorageInterfaces/TranslateStringResponse")]
        System.Threading.Tasks.Task<System.Tuple<string, string>> TranslateStringAsync(string AccountKey, string TranslateFromLanguage, string TranslateToLanguage, string StringForTranslate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/TranslateArray", ReplyAction="http://tempuri.org/IStorageInterfaces/TranslateArrayResponse")]
        System.Tuple<string[], string> TranslateArray(string AccountKey, string Language, string DefaultLanguage, string[] ArrayForTranslation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStorageInterfaces/TranslateArray", ReplyAction="http://tempuri.org/IStorageInterfaces/TranslateArrayResponse")]
        System.Threading.Tasks.Task<System.Tuple<string[], string>> TranslateArrayAsync(string AccountKey, string Language, string DefaultLanguage, string[] ArrayForTranslation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStorageInterfacesChannel : JetSAS.StorageInterfacesService.IStorageInterfaces, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StorageInterfacesClient : System.ServiceModel.ClientBase<JetSAS.StorageInterfacesService.IStorageInterfaces>, JetSAS.StorageInterfacesService.IStorageInterfaces {
        
        public StorageInterfacesClient() {
        }
        
        public StorageInterfacesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StorageInterfacesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageInterfacesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StorageInterfacesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Tuple<JetSAS.StorageInterfacesService.LanguageInfo[], string> GetLanguages(string Language) {
            return base.Channel.GetLanguages(Language);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LanguageInfo[], string>> GetLanguagesAsync(string Language) {
            return base.Channel.GetLanguagesAsync(Language);
        }
        
        public System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string> GetLocalization(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic) {
            return base.Channel.GetLocalization(AccountKey, Language, DefaultLanguage, Project, Topic);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string>> GetLocalizationAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic) {
            return base.Channel.GetLocalizationAsync(AccountKey, Language, DefaultLanguage, Project, Topic);
        }
        
        public System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string> GetLocalizationByList(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, JetSAS.StorageInterfacesService.LocalizationElement[] ListDefaultElements) {
            return base.Channel.GetLocalizationByList(AccountKey, Language, DefaultLanguage, Project, Topic, ListDefaultElements);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<JetSAS.StorageInterfacesService.LocalizationElement[], string, string>> GetLocalizationByListAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, JetSAS.StorageInterfacesService.LocalizationElement[] ListDefaultElements) {
            return base.Channel.GetLocalizationByListAsync(AccountKey, Language, DefaultLanguage, Project, Topic, ListDefaultElements);
        }
        
        public System.Tuple<string, string> GetLocalizationElement(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, string ElementName, bool IsRefreshTranslate, string DefaultValue) {
            return base.Channel.GetLocalizationElement(AccountKey, Language, DefaultLanguage, Project, Topic, ElementName, IsRefreshTranslate, DefaultValue);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string, string>> GetLocalizationElementAsync(string AccountKey, string Language, string DefaultLanguage, string Project, string Topic, string ElementName, bool IsRefreshTranslate, string DefaultValue) {
            return base.Channel.GetLocalizationElementAsync(AccountKey, Language, DefaultLanguage, Project, Topic, ElementName, IsRefreshTranslate, DefaultValue);
        }
        
        public System.Tuple<string, string> TranslateString(string AccountKey, string TranslateFromLanguage, string TranslateToLanguage, string StringForTranslate) {
            return base.Channel.TranslateString(AccountKey, TranslateFromLanguage, TranslateToLanguage, StringForTranslate);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string, string>> TranslateStringAsync(string AccountKey, string TranslateFromLanguage, string TranslateToLanguage, string StringForTranslate) {
            return base.Channel.TranslateStringAsync(AccountKey, TranslateFromLanguage, TranslateToLanguage, StringForTranslate);
        }
        
        public System.Tuple<string[], string> TranslateArray(string AccountKey, string Language, string DefaultLanguage, string[] ArrayForTranslation) {
            return base.Channel.TranslateArray(AccountKey, Language, DefaultLanguage, ArrayForTranslation);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<string[], string>> TranslateArrayAsync(string AccountKey, string Language, string DefaultLanguage, string[] ArrayForTranslation) {
            return base.Channel.TranslateArrayAsync(AccountKey, Language, DefaultLanguage, ArrayForTranslation);
        }
    }
}
